name: Playwright Test Run on Test Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  BASE_URL: https://talent.direct.hipro-job.jp
  ADMIN_TOKEN: your_admin_token_here

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17.1]
        shard: [1, 2, 3]

    steps:
      # checkout repository
      - name: Checkout Repo
        uses: actions/checkout@v4

      # prepare node runtime
      - name: Prepare Node Env
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      # cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.shard }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # install dependencies
      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Create .env.test file
        run: |
          echo "BASE_URL=https://talent.direct.hipro-job.jp" >> .env.test
          echo "ADMIN_TOKEN=${{ secrets.ADMIN_TOKEN }}" >> .env.test

      - name: Run tests on Test environment
        run: npx playwright test

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
